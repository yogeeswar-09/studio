
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users Collection
    // - Authenticated users can read any user's profile (e.g., to see seller details).
    // - Users can only create and update their own profile.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update: if request.auth != null && request.auth.uid == userId;
      // allow delete: if needed; // No delete rule by default for user profiles
    }

    // Listings Collection
    // - Anyone can read listings.
    // - Authenticated users can create listings for themselves.
    // - Only the seller can update or delete their own listings.
    match /listings/{listingId} {
      allow read: if true;
      allow create: if request.auth != null && request.resource.data.sellerId == request.auth.uid;
      allow update: if request.auth != null && resource.data.sellerId == request.auth.uid;
      allow delete: if request.auth != null && resource.data.sellerId == request.auth.uid;
    }

    // Conversations Collection
    // - Participants can read and update their conversation document.
    // - Authenticated users can create new conversations where they are a participant.
    match /conversations/{conversationId} {
      allow read, update: if request.auth != null && request.auth.uid in resource.data.participantUids;
      allow create: if request.auth != null && request.auth.uid in request.resource.data.participantUids;

      // Messages Subcollection within a Conversation
      // - Participants can read messages in their conversation.
      // - Participants can create new messages in their conversation.
      match /messages/{messageId} {
        allow read: if request.auth != null && get(/databases/$(database)/documents/conversations/$(conversationId)).data.participantUids.hasAny([request.auth.uid]);
        allow create: if request.auth != null && get(/databases/$(database)/documents/conversations/$(conversationId)).data.participantUids.hasAny([request.auth.uid])
                        && request.resource.data.senderId == request.auth.uid;
        // No update/delete for messages by default to maintain chat integrity
      }
    }
  }
}

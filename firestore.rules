
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users:
    // - Anyone can create a user (signup), if they are authenticated (Firebase Auth user exists).
    // - Authenticated users can read their own profile.
    // - Authenticated users can update their own profile.
    match /users/{userId} {
      allow create: if request.auth != null; // User document creation during signup
      allow read, update: if request.auth != null && request.auth.uid == userId;
      // allow delete: if request.auth != null && request.auth.uid == userId; // Optional
    }

    // Listings:
    // - Authenticated users can create listings.
    // - Anyone can read listings. (Consider if 'available' listings should be public, and others private to seller)
    // - Only the seller can update or delete their own listings.
    match /listings/{listingId} {
      allow create: if request.auth != null;
      allow read: if true; // Permissive for development, refine for production (e.g., check status)
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.sellerId;
    }

    // Conversations:
    // - Only participants can read/write messages in a conversation.
    match /conversations/{conversationId} {
      allow read, update, create: if request.auth != null && request.auth.uid in resource.data.participantUids;

      // Messages subcollection:
      // - Only participants of the parent conversation can read/write messages.
      match /messages/{messageId} {
        allow read, create: if request.auth != null && 
                              request.auth.uid in get(/databases/$(database)/documents/conversations/$(conversationId)).data.participantUids;
        // Update/delete of messages usually not allowed from client
        // allow update, delete: if false; 
      }
    }
  }
}


rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Default deny all
    match /{document=**} {
      allow read, write: if false;
    }

    // Users Collection
    // Users can create their own profile (e.g., during signup).
    // Users can read and update their own profile.
    // No one else can read or write to other user profiles directly for now (can be expanded later if needed for e.g. admin roles).
    match /users/{userId} {
      allow read, update: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null && request.auth.uid == userId;
    }

    // Listings Collection
    // Anyone can read listings (for browse/search).
    // Authenticated users can create new listings (sellerId must match their UID).
    // Only the seller can update or delete their own listings.
    match /listings/{listingId} {
      allow read: if true;
      allow create: if request.auth != null && request.resource.data.sellerId == request.auth.uid;
      allow update, delete: if request.auth != null && resource.data.sellerId == request.auth.uid;
    }

    // Conversations Collection
    // Participants can create, read, and update their own conversations.
    // (Update typically means updating lastMessage, unreadCount, updatedAt).
    match /conversations/{conversationId} {
      allow create: if request.auth != null && request.auth.uid in request.resource.data.participantUids;
      allow read, update: if request.auth != null && request.auth.uid in resource.data.participantUids;

      // Messages Subcollection (within a conversation)
      // Participants of the conversation can read and create messages.
      // Updates/deletes of messages are generally not allowed for simplicity, but can be added.
      match /messages/{messageId} {
        allow read, create: if request.auth != null && get(/databases/$(database)/documents/conversations/$(conversationId)).data.participantUids.hasAny([request.auth.uid]);
      }
    }
  }
}

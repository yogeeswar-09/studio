
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users Collection
    match /users/{userId} {
      // Anyone can read user profiles (e.g., for seller info)
      allow read: if true;
      // Only the authenticated user can create or update their own profile
      allow create, update: if request.auth != null && request.auth.uid == userId;
      // Users cannot delete their profiles through the client
      allow delete: if false;
    }

    // Listings Collection
    match /listings/{listingId} {
      // Anyone can read listings
      allow read: if true;
      // Authenticated users can create listings
      allow create: if request.auth != null;
      // Only the seller can update or delete their own listing
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.sellerId;
    }

    // Conversations Collection
    match /conversations/{conversationId} {
      // Only participants can read a conversation
      allow read: if request.auth != null && request.auth.uid in resource.data.participantUids;
      // Participants can create conversations - ensure participantUids includes the creator
      allow create: if request.auth != null && request.auth.uid in request.resource.data.participantUids;
      // Only participants can update (e.g., lastMessage, unreadCount)
      allow update: if request.auth != null && request.auth.uid in resource.data.participantUids;
      // Participants cannot delete conversations directly
      allow delete: if false;
    }

    // Messages Subcollection (within Conversations)
    match /conversations/{conversationId}/messages/{messageId} {
      // Only participants of the parent conversation can read messages
      allow read: if request.auth != null && get(/databases/$(database)/documents/conversations/$(conversationId)).data.participantUids.hasAny([request.auth.uid]);
      // Only participants can create messages in their conversation,
      // and the senderId of the new message must be the authenticated user.
      allow create: if request.auth != null && request.resource.data.senderId == request.auth.uid && get(/databases/$(database)/documents/conversations/$(conversationId)).data.participantUids.hasAny([request.auth.uid]);
      // Messages are immutable
      allow update, delete: if false;
    }
  }
}
